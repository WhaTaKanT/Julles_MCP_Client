<Window x:Class="MCP_DevSolution_1_FrontendClient_ModelContextProtocol.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MCP_DevSolution_1_FrontendClient_ModelContextProtocol"
        mc:Ignorable="d"
        Title="MainWindow" Height="600" Width="1000">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/> <!-- Menu -->
            <RowDefinition Height="Auto"/> <!-- Toolbar -->
            <RowDefinition Height="*"/>    <!-- Main content area -->
        </Grid.RowDefinitions>

        <Menu Grid.Row="0">
            <MenuItem Header="[File]"/>
            <MenuItem Header="[Profiles]"/>
            <MenuItem Header="[Tools]"/>
            <MenuItem Header="[Help]"/>
        </Menu>

        <ToolBar Grid.Row="1">
            <Button Name="ConnectButton" Content="[Connect]"/>
            <Button Name="DisconnectButton" Content="[Disconnect]"/>
            <Button Name="ProfilesButton" Content="[Profiles]"/>
            <Button Name="AliasesButton" Content="[Aliases]"/>
            <Button Name="TriggersButton" Content="[Triggers]"/>
        </ToolBar>

        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200" MinWidth="150"/> <!-- Left Sidebar -->
                <ColumnDefinition Width="*"/>      <!-- Central Area -->
                <ColumnDefinition Width="200" MinWidth="150"/> <!-- Right Sidebar -->
            </Grid.ColumnDefinitions>

            <!-- Left Sidebar for Logging -->
            <TabControl Grid.Column="0" x:Name="LeftSidebarTabControl">
                <TabItem Header="Log" x:Name="LogOuterTab">
                    <TabControl x:Name="LogChannelsTabControl">
                        <TabItem Header="All" x:Name="LogChannelAllTab">
                            <ListView x:Name="AllLogOutputListView">
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding}" TextWrapping="Wrap" />
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </TabItem>
                        <TabItem Header="Chat" x:Name="LogChannelChatTab">
                            <ListView x:Name="ChatLogOutputListView">
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding}" TextWrapping="Wrap" />
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </TabItem>
                        <TabItem Header="Combat" x:Name="LogChannelCombatTab">
                            <ListView x:Name="CombatLogOutputListView">
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding}" TextWrapping="Wrap" />
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </TabItem>
                        <TabItem Header="System" x:Name="LogChannelSystemTab">
                            <ListView x:Name="SystemLogOutputListView">
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding}" TextWrapping="Wrap" />
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </TabItem>
                        <TabItem Header="MCP Debug" x:Name="LogChannelMcpDebugTab">
                            <ListView x:Name="McpDebugLogOutputListView">
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding}" TextWrapping="Wrap" />
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </TabItem>
                    </TabControl>
                </TabItem>
                <!-- Other potential left sidebar tabs can be added here -->
            </TabControl>

            <!-- Placeholder for Central Area -->
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>    <!-- Output Display -->
                    <RowDefinition Height="Auto"/> <!-- Command Input -->
                </Grid.RowDefinitions>

                <ListView Grid.Row="0" x:Name="ServerOutputListView" ItemsSource="{Binding ServerOutputMessages}">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding}" TextWrapping="Wrap" />
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>

                <TextBox Grid.Row="1" x:Name="CommandInputTextBox"
                         Text="{Binding CommandInputText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         PreviewKeyDown="CommandInputTextBox_PreviewKeyDown" />
            </Grid>

            <!-- Placeholder for Right Sidebar -->
            <TabControl Grid.Column="2" x:Name="RightSidebarTabControl">
                <TabItem Header="Connections" x:Name="ConnectionsTab" DataContext="{Binding ConnectionProfileVM}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ListView Grid.Row="0" x:Name="ProfilesListView" ItemsSource="{Binding Profiles}" SelectedItem="{Binding SelectedProfile, Mode=TwoWay}">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Header="Profile Name" DisplayMemberBinding="{Binding ProfileName}" Width="100"/>
                                    <GridViewColumn Header="Server Address" DisplayMemberBinding="{Binding ServerHost}" Width="120"/>
                                    <GridViewColumn Header="Status" DisplayMemberBinding="{Binding Status}" Width="80"/>
                                </GridView>
                            </ListView.View>
                        </ListView>
                        <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center">
                            <Button x:Name="AddProfileButton" Content="Add" Margin="5" Command="{Binding OpenAddProfileDialogCommand}"/>
                            <Button x:Name="EditProfileButton" Content="Edit" Margin="5" Command="{Binding OpenEditProfileDialogCommand}"/>
                            <Button x:Name="DeleteProfileButton" Content="Delete" Margin="5" Command="{Binding DeleteProfileCommand}"/>
                        </StackPanel>
                    </Grid>
                </TabItem>
                <TabItem Header="Aliases" x:Name="AliasesTab" DataContext="{Binding AliasVM}">
                    <Grid Margin="5">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/> <!-- ListView -->
                            <RowDefinition Height="Auto"/> <!-- Input Fields -->
                            <RowDefinition Height="Auto"/> <!-- Buttons -->
                        </Grid.RowDefinitions>

                        <ListView Grid.Row="0" x:Name="AliasesListView" Margin="0,0,0,5" ItemsSource="{Binding Aliases}" SelectedItem="{Binding SelectedAlias, Mode=TwoWay}">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Header="Alias" DisplayMemberBinding="{Binding AliasPhrase}" Width="100"/>
                                    <GridViewColumn Header="Replacement" DisplayMemberBinding="{Binding ReplacementText}" Width="150"/>
                                </GridView>
                            </ListView.View>
                        </ListView>

                        <Grid Grid.Row="1" Margin="0,5,0,5">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Row="0" Grid.Column="0" Content="Alias:" VerticalAlignment="Center"/>
                            <TextBox Grid.Row="0" Grid.Column="1" x:Name="AliasInputTextBox" Text="{Binding EditAliasPhrase, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5,2"/>
                            <Label Grid.Row="1" Grid.Column="0" Content="Replacement:" VerticalAlignment="Center"/>
                            <TextBox Grid.Row="1" Grid.Column="1" x:Name="AliasReplacementTextBox" Text="{Binding EditReplacementText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5,2" TextWrapping="Wrap" AcceptsReturn="True" MinLines="2"/>
                        </Grid>

                        <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,5,0,0">
                            <Button x:Name="AddUpdateAliasButton" Content="Add/Update" Margin="5,0" Command="{Binding AddUpdateAliasCommand}"/>
                            <Button x:Name="DeleteAliasButton" Content="Delete" Margin="5,0" Command="{Binding DeleteAliasCommand}"/>
                            <Button x:Name="ClearAliasFieldsButton" Content="Clear Fields" Margin="5,0" Command="{Binding ClearAliasFieldsCommand}"/>
                        </StackPanel>
                    </Grid>
                </TabItem>
                <TabItem Header="Triggers" x:Name="TriggersTab" DataContext="{Binding TriggerVM}">
                    <Grid Margin="5">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/> <!-- ListView -->
                            <RowDefinition Height="Auto"/> <!-- Input Fields -->
                            <RowDefinition Height="Auto"/> <!-- Buttons -->
                        </Grid.RowDefinitions>

                        <ListView Grid.Row="0" x:Name="TriggersListView" Margin="0,0,0,5" ItemsSource="{Binding Triggers}" SelectedItem="{Binding SelectedTrigger, Mode=TwoWay}">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Header="Enabled" Width="60">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <CheckBox IsChecked="{Binding IsEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Pattern" DisplayMemberBinding="{Binding Pattern}" Width="100"/>
                                    <GridViewColumn Header="Action" DisplayMemberBinding="{Binding ActionType}" Width="80"/>
                                    <GridViewColumn Header="Details" DisplayMemberBinding="{Binding ActionValue}" Width="120"/>
                                </GridView>
                            </ListView.View>
                        </ListView>

                        <Grid Grid.Row="1" Margin="0,5,0,5">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/> <!-- For IsEnabled CheckBox -->
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Row="0" Grid.Column="0" Content="Pattern (Regex):" VerticalAlignment="Center"/>
                            <TextBox Grid.Row="0" Grid.Column="1" x:Name="TriggerPatternTextBox" Text="{Binding EditPattern, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5,2"/>

                            <Label Grid.Row="1" Grid.Column="0" Content="Action Type:" VerticalAlignment="Center"/>
                            <ComboBox Grid.Row="1" Grid.Column="1" x:Name="TriggerActionTypeComboBox" ItemsSource="{Binding ActionTypes}" SelectedItem="{Binding EditActionType, Mode=TwoWay}" Margin="5,2"/>

                            <Label Grid.Row="2" Grid.Column="0" Content="Action Value:" VerticalAlignment="Center"/>
                            <TextBox Grid.Row="2" Grid.Column="1" x:Name="TriggerActionValueTextBox" Text="{Binding EditActionValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5,2" TextWrapping="Wrap" AcceptsReturn="True" MinLines="2"/>

                            <Label Grid.Row="3" Grid.Column="0" Content="Enabled:" VerticalAlignment="Center"/>
                            <CheckBox Grid.Row="3" Grid.Column="1" x:Name="TriggerEditIsEnabledCheckBox" IsChecked="{Binding EditIsEnabled, Mode=TwoWay}" VerticalAlignment="Center" Margin="5,2"/>
                        </Grid>

                        <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,5,0,0">
                            <Button x:Name="AddUpdateTriggerButton" Content="Add/Update" Margin="5,0" Command="{Binding AddUpdateTriggerCommand}"/>
                            <Button x:Name="DeleteTriggerButton" Content="Delete" Margin="5,0" Command="{Binding DeleteTriggerCommand}"/>
                            <Button x:Name="ClearTriggerFieldsButton" Content="Clear Fields" Margin="5,0" Command="{Binding ClearTriggerFieldsCommand}"/>
                        </StackPanel>
                    </Grid>
                </TabItem>
                <TabItem Header="External API" x:Name="ExternalApiTab">
                <!-- DataContext for External API will be set if/when its ViewModel is created -->
                    <Grid Margin="10">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Row="0" Grid.ColumnSpan="2" x:Name="ApiStatusTextBlock" Text="Status: Not Initialized" Margin="5" HorizontalAlignment="Center" FontWeight="Bold"/>

                        <Label Grid.Row="1" Grid.Column="0" Content="Listen Port:" VerticalAlignment="Center" Margin="5"/>
                        <TextBox Grid.Row="1" Grid.Column="1" x:Name="ApiPortTextBox" Text="8080" Margin="5" VerticalAlignment="Center"/>

                        <StackPanel Grid.Row="2" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Center" Margin="5">
                            <Button x:Name="StartApiButton" Content="Start API" Margin="5"/>
                            <Button x:Name="StopApiButton" Content="Stop API" Margin="5"/>
                        </StackPanel>
                    </Grid>
                </TabItem>
                <!-- Other tabs can be added here later -->
            </TabControl>
        </Grid>
    </Grid>
    <Window.Resources>
        <Style TargetType="GridViewColumnHeader">
            <Setter Property="HorizontalContentAlignment" Value="Left" />
        </Style>
    </Window.Resources>
</Window>
